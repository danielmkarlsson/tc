cps (-1)

d1
$ spread _slow (replicate 4 1)
$ stack[
somecyclesBy (6/7) (spread _slow (replicate 11 1))
$ s (randcat(
   (replicate 1 "supergong(2,5)")
++ (replicate 1 "supergong(3,4)") 
++ (replicate 2 "supergong(3,5,2)")
++ (replicate 3 "supergong(3,8)") 
++ (replicate 4 "supergong(4,11)")
++ (replicate 6 "supergong(5,8)") 
++ (replicate 7 "supergong(5,12)")
++ (replicate 8 "supergong(5,16)")
++ (replicate 8 "supergong(7,8)") 
++ (replicate 9 "supergong(7,12)")
++ (replicate 9 "supergong(7,16)")
++ (replicate 10 "supergong(9,16)")
))
# rmf (slow 166 $ scalex 200 20 $ sine)
# rma 1
# sustain (slow 165 $ scalex 0.01 1 $ saw) 
# pan 0.25,
(33<~)
$ somecyclesBy (7/8) (spread _slow (replicate 13 1))
$ s (randcat(
   (replicate 1 "supergong(2,5)")
++ (replicate 1 "supergong(3,4)") 
++ (replicate 2 "supergong(3,5,2)")
++ (replicate 3 "supergong(3,8)") 
++ (replicate 4 "supergong(4,11)")
++ (replicate 6 "supergong(5,8)") 
++ (replicate 7 "supergong(5,12)")
++ (replicate 8 "supergong(5,16)")
++ (replicate 8 "supergong(7,8)") 
++ (replicate 9 "supergong(7,12)")
++ (replicate 9 "supergong(7,16)")
++ (replicate 10 "supergong(9,16)")
))
# pan 0.75
# rmf (slow 167 $ scalex 20 200 $ sine)
# rma 1
# sustain (slow 168 $ scalex 0.01 1 $ saw) 
# n 7
]
# gain (slow 32 $ scalex 0.01 0.5 $ saw)

d2
$ somecyclesBy (1/128) (64~>)
$ somecyclesBy (1/118) (32~>)
$ somecyclesBy (1/117) (16~>)
$ sometimesBy  (1/113) (8~>)
$ sometimesBy  (1/118) (4~>)
$ sometimesBy  (1/121) (2~>)
$ sometimesBy  (1/129) (1~>)
$ somecyclesBy (1/9) (9<~)
$ somecyclesBy (1/12) (8<~)
$ somecyclesBy (1/19) (7<~)
$ somecyclesBy (1/11) (6<~)
$ somecyclesBy (1/9) (5<~)
$ slow (wchoose [4,3..1] [1,2..5])
$ fast (wchoose [7,6..1] [1,3..13])
$ s "[has,cel,cel_?]"
# up (randcat(
   (replicate 08 "<11 3>")
++ (replicate 06 "<9 7>")
++ (replicate 05 "<7 5>")
++ (replicate 04 "<5 2>")
++ (replicate 03 "<3 0>")
++ (replicate 02 "<2 9>")
++ (replicate 01 "<0 11")
))
# pan (slow 3.3 $ sine)
# gain (slow 0.12 $ scale 0.7 1.2 $ rand)
# lpf (slow 0.13 $ wchoose [8,7..1] [20,40,80,160,320,640,1200,2400])
# begin (slow 9 $ scale 0 0.9 $ saw)
# end (slow 9 $ scale 0.1 1 $ saw)
# n (rep (1/32) $ slow 0.14 $ wchoose [5,4..1] [21..25]
+ (rep (1/32) $ choose [0..999]))
# att (slow 0.15 $ scalex 0.01 0.04 $ rand)
# rel (slow 0.16 $ scalex 0.2 3.9 $ rand)
# delay (0.1 
/ (wchoose [1..10] [1..11]))
# delayfb 0.94
# delayt ((1/512)
* (wchoose [10,9..1] [(1/1),(1/2),(1/3),(1/4),(1/5),(1/6),(1/7),(1/8),(1/9)]))
# speed (slow 128 $ scalex (1/32) 0.75 $ saw)
# rma (slow 0.17 $ scalex 0.1 1 $ rand)
# rmf (rep (1/2) $ slow 0.18 $ scalex 80 3000 $ rand)
# rmd (slow 0.19 $ scalex 0.001 0.4 $ rand)
# rmx 1
# nudge (slow 32 $ scale 0 2 sine)

m1
$ (111<~)
$ somecyclesBy (1/128) (64~>)
$ somecyclesBy (1/118) (32~>)
$ somecyclesBy (1/117) (16~>)
$ sometimesBy  (1/113) (8~>)
$ sometimesBy  (1/118) (4~>)
$ sometimesBy  (1/121) (2~>)
$ sometimesBy  (1/129) (1~>)
$ somecyclesBy (1/9) (9<~)
$ somecyclesBy (1/12) (8<~)
$ somecyclesBy (1/19) (7<~)
$ somecyclesBy (1/11) (6<~)
$ somecyclesBy (1/9) (5<~)
$ slow (wchoose [4,3..1] [1,2..5])
$ fast (wchoose [7,6..1] [1,3..13])
$ n "0"
# cc0 (rep (1/4) $ slow 0.20 $ rand)
# cc1 (rep (1/4) $ slow 0.21 $ wchoose [1,2] [0,1])

cps 1
